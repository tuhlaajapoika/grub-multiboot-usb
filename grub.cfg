## Multiboot config
#
# gpt1 = GRUB partition
# gpt2 = Win10 dedicated partition
# gpt3 = Linux ISOs etc.


## Use following for multibooting instead
#   https://github.com/thias/glim/


## Globals
# Access files on GPT partitions / NTFS filesystem
insmod part_gpt
insmod ntfs

# Filename globbing
insmod regexp

# Search partitions by uuid
insmod search_fs_uuid

# Default $root (GNU/Linux ISOs)
set uuid="XXXXXX"
search.fs_uuid $uuid root hd0,gpt3

# Win10 dedicated partition
set win10uuid="XXXXX"
search.fs_uuid $win10uuid win10root hd0,gpt2


## Menuentries
#
# ArcoLinux
for iso in ($root)/iso/arcolinux/arcolinux*.iso; do
  if [ ! -e "$iso" ]; then break; fi
  regexp \
    --set 1:isofile \
    --set 2:edition \
    --set 3:version \
    --set 4:arch \
    "^\($root\)(.*arcolinux([^v0-9]*)-([^-]+)-([^-]+)\.iso\$)" "${iso}"
  menuentry "ArcoLinux${edition} ${version}" "${isofile}" "${version}" "${arch}" --class arcolinux {
    set isofile=$2
    echo "Using ${isofile} ..."
    loopback loop ${isofile}
    linux (loop)/arch/boot/x86_64/vmlinuz-linux img_dev=/dev/disk/by-uuid/${uuid} img_loop=$isofile earlymodules=loop
    initrd (loop)/arch/boot/intel-ucode.img (loop)/arch/boot/amd-ucode.img (loop)/arch/boot/x86_64/initramfs-linux.img
  }
done


# Ubuntu
submenu "Ubuntu" --class ubuntu {
  for iso in ($root)/iso/ubuntu/ubuntu-*.iso; do
    if [ ! -e "$iso" ]; then break; fi
    regexp \
      --set 1:isofile \
      --set 2:version \
      --set 3:edition \
      --set 4:arch \
      "^\($root\)(.*ubuntu-([^-]+)-([^-]+)-([^-]+)\.iso\$)" "${iso}"
    menuentry "Ubuntu ${version} ${edition}" "${isofile}" --class ubuntu {
      set isofile=$2
      echo "Using ${isofile} ..."
      loopback loop ${isofile}
      # Might help booting: live-media-path=/casper/
      linux (loop)/casper/vmlinuz iso-scan/filename=${isofile} file=/cdrom/preseed/ubuntu.seed boot=casper quiet splash ---
      initrd (loop)/casper/initrd
    }
    menuentry "Ubuntu ${version} ${edition} (installer only)" "${isofile}" --class ubuntu {
      set isofile=$2
      echo "Using ${isofile} ..."
      loopback loop ${isofile}
      # NOTE: Only installer: only-ubiquity
      # Might help booting: live-media-path=/casper/
      linux (loop)/casper/vmlinuz iso-scan/filename=${isofile} file=/cdrom/preseed/ubuntu.seed boot=casper only-ubiquity quiet splash ---
      initrd (loop)/casper/initrd
    }
  done
}


# Windows 10 - dedicated partition
# Data from MediaCreationTool.exe -> Win10.iso -> copy to partition
# (iso loopback chainloading isn't possible?)
menuentry "Windows 10 20H2v2 Finnish x64" "${win10root}" {
  insmod chain
  set root=$2
	chainloader ($root)/efi/boot/bootx64.efi
}

menuentry "Power off system" {
	echo "System shutting down..."
	halt
}

menuentry "Restart system" {
	echo "System rebooting..."
	reboot
}

if [ ${grub_platform} == "efi" ]; then
	menuentry "Boot to UEFI firmware" {
		fwsetup
	}
fi
